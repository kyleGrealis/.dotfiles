file:///home/kyle/dev/linux-setup/setup.sh {"mtime":1741060168180,"ctime":1740610062133,"size":6552,"etag":"3dr0hbied6pb","orphaned":false,"typeId":""}
#! /usr/bin/env bash

#=================================================================
# Installation script for Linux Operating system
# Purpose: Automate system package installation, move directories
#   to new /home/$USER level, and set configuraions
# Created: Feb. 14, 2025
# Updated: Feb. 18, 2025
#=================================================================

# Exit on any error and enable error tracing
set -e
set -x

# Start timestamp for logging
echo "==> Starting installation: $(date)"


#=================================================================
# System Updates
#=================================================================
echo "==> Updating system packages..."
sudo apt update && sudo apt upgrade -y


#=================================================================
# Install Essential Tools & R Build Dependencies
#=================================================================
echo "==> Installing system utilities and build dependencies..."

# System utilities
echo "==> Installing system tools..."
sudo apt install -y build-essential git curl wget xclip openssh-server \
    nmap libnss-mdns arp-scan trash-cli fonts-firacode rsync tlp \
    net-tools htop dnsutils ufw samba openvpn smartmontools gparted \
    tldr stow flatpak gnome-software-plugin-flatpak nautilus dkms \
    gnome-tweaks gnome-shell-extensions gnome-shell-extension-manager \
    libxcb-xinerama0 libxcb-xtest0 libxcb-cursor0 \
    cmake g++ pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3

echo "==> Finishing flatpak installation..."
flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

# R build requirements
#echo "==> Installing R build dependencies..."
sudo apt install -y gfortran libreadline-dev libx11-dev libxt-dev \
    libpng-dev libjpeg-dev libcairo2-dev xvfb libbz2-dev libzstd-dev \
    liblzma-dev libcurl4-openssl-dev libpcre2-dev cmake \
    openjdk-17-jdk

# Additional R package dependencies
#echo "==> Installing R package dependencies..."
sudo apt install -y libsodium-dev libxml2-dev libgmp3-dev libpq-dev \
    libgdal-dev libudunits2-dev libharfbuzz-dev libfribidi-dev \
    libnode-dev libmagick++-dev libmpfr-dev libssl-dev \
    libxslt-dev gdal-bin libsqlite3-dev \
    libtiff-dev libfreetype-dev \
    default-libmysqlclient-dev


#=================================================================
# Set up SSH
#=================================================================
echo "==> Creating SSH directory..."
#cp .ssh/config ~/.ssh/
echo "==> Setting up SSH keys..."
#ssh-keygen -t ed25519
echo "==> Copying SSH keys to Raspberry Pi"
#ssh-copy-id pi5


#=================================================================
# Repo cloning
#=================================================================
echo "==> Cloning personal repositories..."
#cd ~/dev/
#git clone git@github.com:kyleGrealis/r-accessories.git
#git clone git@github.com:kyleGrealis/nascaR.data.git
#git clone git@github.com:kyleGrealis/froggeR.git
#git clone git@github.com:kyleGrealis/dot-files.git
#cd ~


#=================================================================
# Dot files
#=================================================================
echo "==> Backing up .bashrc & copying dot files"
#cp ~/.bashrc ~/.bashrc.bak
#rsync -azh --info=progress2 pi5:$HOME/t9/dot-backups/{.bash*,.Rprofile} ~


#=================================================================
# System apps from .deb files
#=================================================================
echo "==> Copying app files (.deb & .tar.gz) from Raspberry Pi..."
rsync -azh --info=progress2 pi5:$HOME/t9/deb-pkgs/ ~/Downloads/

echo "==> Installing the latest Quarto..."
sudo dpkg -i ~/Downloads/quarto-*-linux-amd64.deb

echo "==> Installing the latest Positron..."
sudo dpkg -i ~/Downloads/Positron-*-x64.deb

echo "==> Installing Magic Trackpad file..."
sudo dpkg -i ~/Downloads/magicmouse-*.deb

echo "==> Installing Zoom..."
sudo dpkg -i ~/Downloads/zoom_amd64.deb

echo "==> Extracting & installing Firefox Nightly build..."
tar -xf ~/Downloads/firefox*.tar* -C $HOME
chmod +x $HOME/firefox/firefox
mkdir -p ~/.local/share/applications
cp ~/dev/dot-files/firefox/firefox-dev.desktop ~/.local/share/applications/
echo "Updating desktop database..."
update-desktop-database ~/.local/share/applications


#=================================================================
# Installing Tailscale
#=================================================================
echo "==> Installing Tailscale..."
curl -fsSL https://tailscale.com/install.sh | sh


#=================================================================
# Installing R
#=================================================================
echo "==> Installing & building R..."
#sudo bash ./r-setup.sh
sudo apt update
sudo apt install -y r-base r-base-dev


#=================================================================
# Copy configs
#=================================================================
echo "==> Stowing configuration files from dot-files repo"
# stow -vt $HOME alacritty
stow -vt $HOME bash
stow -vt $HOME froggeR
stow -vt $HOME git
stow -vt $HOME neofetch
stow -vt $HOME Positron
stow -vt $HOME R
# stow -vt $HOME wofi


#=================================================================
# Flatpak apps
#=================================================================
echo "==> Installing Flatpak applications..."
FLATPAK_APPS=(
    "org.mozilla.Thunderbird" 
    "com.slack.Slack"
    "com.spotify.Client"
    "md.obsidian.Obsidian"
    "com.discordapp.Discord"
    "com.bitwarden.desktop"
)

# Try to install all apps at once first (faster)
if flatpak install flathub "${FLATPAK_APPS[@]}" -y; then
    echo "All Flatpak applications installed successfully!"
else
    echo "Batch installation failed. Trying individual installations..."
    # If batch install fails, try them one by one
    for app in "${FLATPAK_APPS[@]}"; do
        echo "Installing $app..."
        flatpak install flathub "$app" -y || echo "Failed to install $app"
    done
fi


#=================================================================
# Manual installation notifications
#=================================================================
echo; echo; echo;
echo "====> Final instructions:"
echo "1) Clone private GitHub repositories."
echo "2) Be sure to install the necessary R packages. See 'r-accessories' repo."
echo "3) Run 'sudo tailscale up --accept-routes=true' to activate Tailscale net."

