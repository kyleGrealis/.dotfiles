---
title: "Performance of a Five-Step Classification Algorithm for Type 1 Diabetes Against C-peptide Diagnostic Standards (NHANES 2001-2004)"
date: last-modified
---

{{< brand logo large >}}

## Purpose

Create a sensitivity analysis of diabetic classification using available NHANES data.
Literature has demonstrated the ability to classify NHANES participants into Type I,
Type II, or "possible" Type II diabetes [@mosslemi_2020] using a five-step process.

![Mosslemi et al. five-step diagnostic process](misc/img/five-step.jpg)

## Background

NHANES ceased collection of C-peptide protein levels after the 2003-2004 cohort.
Recent studies have used a C-peptide threshold of <=200pmol/L as diagnostic criteria
for classifying Type I diabetes. We will perform a sensitivity analysis of using 
available NHANES data for 2001 through 2004, repeating the 
[methods](https://pmc.ncbi.nlm.nih.gov/articles/PMC7041875/) used by @mosslemi_2020,
and contrast results by performing cross-tabulations of C-peptide-based diagnostic 
methods.

## Data setup & processing

Load R packages and project-specific functions.

```{r}
#| label: set up
#| echo: false
source("R/_libraries.R")
source("R/data_dictionary.R")

source('R/custom_functions.R')
source('R/custom_table_functions.R')

if (!fs::dir_exists('data')) fs::dir_create('data')
```

Download NHANES data and create 2001-2004 cohort.

```{r}
#| label: sensitivity analysis for Type 1 vs Type 2 DM
# Per August 8, 2025 Zoom with Ray, Kyle, Dr. Galindo, conduct a sensitivity analysis
#   using data when C-peptide was available & compare to methods used in:
#   https://pmc.ncbi.nlm.nih.gov/articles/PMC7041875/

# for sensitivity analysis
diabetes2004 <- nhanes('DIQ_C') |> mutate(year = 2004, .before = SEQN)
diabetes2002 <- nhanes('DIQ_B') |> mutate(year = 2002, .before = SEQN)

sensitivity_dm <- bind_rows(diabetes2002, diabetes2004) |> 
  select(
    year, SEQN, DIQ010, 
    DID040G, DID040Q, 
    DIQ050, 
    DID060G, DID060Q, DIQ060U, 
    DIQ070
  ) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )
# year: First year of survey
# seqn: Participant ID
# diq010: Doctor told you have diabetes
# did040g: Age when first told you had diabetes
# did040q: Number of years of age
# diq050: Taking insulin now
# did060g: How long taking insulin
# did060q: Number of mos/yrs taking insulin
# did060u: Unit of measure (month/year)
# diq070: Take diabetic pills to lower blood sugar

cpep2004 <- nhanes('L10AM_C') |> mutate(year = 2004, .before = SEQN)
cpep2002 <- nhanes('L10AM_B') |> mutate(year = 2002, .before = SEQN)

cpep <- bind_rows(cpep2002, cpep2004) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  ) |> 
    select(year, seqn, lbxcpsi)
# year: First year of survey
# seqn: Participant ID
# lbxcpsi: C-peptide

demo2004 <- nhanes('DEMO_C') |> 
  mutate(year = 2004, .before = SEQN) |> 
  select(
    year,
    SEQN, RIAGENDR, RIDAGEYR,
    WTMEC2YR, WTINT2YR, SDMVPSU, SDMVSTRA,
    RIDRETH1, DMDEDUC2
  )
demo2002 <- nhanes('DEMO_B') |> 
  mutate(year = 2002, .before = SEQN) |> 
  select(
    year,
    SEQN, RIAGENDR, RIDAGEYR,
    WTMEC2YR, WTINT2YR, SDMVPSU, SDMVSTRA,
    RIDRETH1, DMDEDUC2
  )

demo <- bind_rows(demo2002, demo2004) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )

sensitivity <- left_join(sensitivity_dm, cpep, by = c('seqn', 'year')) |> 
  left_join(demo, by = c('seqn', 'year')) |> 
  # "For all these participants, we calculated the time since diagnosis as age at 
  #   participation minus the age at diagnosis (DIQ.040)." We need to assess both
  #   did040g (can they enter an age?) and did040q (what is that age?). did040g allows
  #   those who were diagnosed at less than a year old to state that. See the first
  #   condition for more...
  mutate(
    # Create a diagnostic age variable for diabetes. Age at survey - diagnosis age:
    diab_duration = case_when(

      # These participants were told that they have diabetes at less than 1yr old, so
      # use their current age at survey for time since diagnosis.
      did040g == 'Less than 1 year' ~ ridageyr,

      # Otherwise, use their age at survey minus age at diagnosis
      .default = ridageyr - did040q   
    )
  )
# year: First year of survey
# seqn: Participant ID
# diq010: Doctor told you have diabetes
# did040g: Age when first told you had diabetes
# did040q: Number of years of age -- USE THIS AS THE AGE AT DX VARIABLE!!!
# diq050: Taking insulin now
# did060g: How long taking insulin
# did060q: Number of mos/yrs taking insulin
# did060u: Unit of measure (month/year)  # 1=months; 2=years
# diq070: Take diabetic pills to lower blood sugar
# lbxcpsi: C-peptide
# riagendr: Gender
# ridageyr: Age in years at screening
# wtmec2yr: Full sample 2-year MEC exam weight
# wtint2yr: Full sample 2-year interview weight
# sdmvpsu: Masked variance pseudo-PSU
# smvstra: Masked variance pseudo-stratum
# ridreth1: Race/Hispanic origin
# dmdeduc2: Education level - Adults 20+
# diab_duration: Time since diabetes diagnosis

save(sensitivity, file = 'data/sensitivity.rds')
```

### Step 0: Valid prior diagnosis of diabetes

"The target population for our treatment-based algorithm is participants with 
self-reported diagnosed diabetes, that is, who replied ‘yes’ to having been told by a 
doctor or other health professional that they have diabetes (DIQ.010 = 1)."

```{r}
#| label: step-0a
# Participants with diagnosed diabetes

# The target population for our treatment-based algorithm is participants with 
# self-reported diagnosed diabetes, that is, who replied ‘yes’ to having been told by a 
# doctor or other health professional that they have diabetes (DIQ.010 = 1)

# Self-reported diagnosis options are: Yes, No, Borderline, Don't know, <NA>
tabyl(sensitivity, diq010) |> 
  adorn_pct_formatting() |> 
#     diq010     n percent valid_percent
#         Yes  1087    5.4%          5.4%
#          No 18862   93.8%         93.8%
#  Borderline   156    0.8%          0.8%
#  Don't know     8    0.0%          0.0%
#        <NA>     2    0.0%             -
  gt() |> 
  cols_label(
    diq010 = 'Doctor told you have diabetes',
    n = 'Count', percent = 'Percent',
    valid_percent = 'Valid percent'
  ) |> 
  tab_header(
    title = md('**Step 0a**: Valid prior diagnosis of diabetes'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()
```

For those reporting a value for age at diabetes diagnosis, some didn't know what age
or refused to answer (*n*=`r sum(sensitivity$did040g %in% c("Don't know", 'Refused'))`). 
Therefore, `diab_duration` (a created variable representing the time since diagnosis) is 
incalculable and should be excluded.

```{r}
#| label: step-0b
# For those reporting a value for age at diabetes diagnosis, some didn't know what age
#   or refused to answer. Therefore, `diab_duration` (time since diagnosis) is 
#   incalculable and should be excluded.
sensitivity |> 
  mutate(did040g = if_else(did040g == 'Enter number', 'Number of Years', did040g)) |> 
  tabyl(did040g) |> 
  adorn_pct_formatting() |> 
#          did040g     n percent valid_percent
#        Don't know     8    0.0%          0.7%   * should be excluded
#  Less than 1 year    18    0.1%          1.7%   * assumed age at birth
#   Number of Years  1060    5.3%         97.5%   * were able to provide an age at dx
#           Refused     1    0.0%          0.1%   * should be excluded
#              <NA> 19028   94.6%             -   * should be excluded
  gt() |> 
  cols_label(
    did040g = 'Age when first told you have diabetes',
    n = 'Count', percent = 'Percent',
    valid_percent = 'Valid percent'
  ) |> 
  tab_header(
    title = md('**Step 0b**: Valid prior diagnosis of diabetes<br>Those with known age of diabetes diagnosis'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()
```

Which participants have a self-reported "Yes" diabetes prior diagnosis AND have a
calculated value for time since diagnosis? We will proceed and include these participants.

```{r}
#| label: step-0c
# Which participants have a self-reported "Yes" diabetes prior diagnosis AND have a
#   calculated value for time since diagnosis. We will proceed with filtering to only
#   include these participants.
sensitivity |> 
  mutate(has_duration_val = if_else(!is.na(diab_duration), 'Valid', 'Not valid')) |> 
  tabyl(diq010, has_duration_val) |> 
#      diq010 Not Valid   Valid
#         Yes         9    1078
#          No     18862       0
#  Borderline       156       0
#  Don't know         8       0
#        <NA>         2       0
  gt() |> 
  cols_label(diq010 = 'Doctor told you have diabetes') |> 
  tab_header(
    title = md('**Step 0c**: Valid prior diagnosis of diabetes<br>Those with valid duration of disease information'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()

step_0 <- sensitivity |> 
  filter(!is.na(diab_duration))

not_yes_dm <- sum(sensitivity$diq010 != 'Yes', na.rm = TRUE) + 
  sum(is.na(sensitivity$diq010))
not_yes_dm_pct <- round((not_yes_dm / nrow(sensitivity)) * 100, 2)

no_age <- sum(sensitivity$did040g %in% c("Don't know", 'Refused'))
no_age_pct <- round((no_age / nrow(sensitivity)) * 100, 2)

invalid_dur <- sum(is.na(sensitivity$diab_duration))
invalid_dur_pct <- round((invalid_dur / nrow(sensitivity)) * 100, 2)

# nrow(sensitivity)  # 20115 original participants from 2001-2004
# nrow(step_0)       # 1078 with self-reported previous diabetes diagnosis & duration info
```

There were `r nrow(sensitivity)` original participants in the 2001-2004 NHANES cohort. The
results of the initial exclusion criteria are:

* `r scales::comma(not_yes_dm)` (`r not_yes_dm_pct`%) did not report "Yes" for diabetes  
* `r scales::comma(no_age)` (`r no_age_pct`%) did not know or refused to answer the age at diabetes diagnosis  
* `r scales::comma(invalid_dur)` (`r invalid_dur_pct`%) contained invalid (missing) self-reported duration of diabetes  


While some participants met multiple exclusion criteria, after preprocessing, there are 
`r nrow(step_0)` participants with a valid self-reported  previous diabetes diagnosis and 
valid disease duration information. We will continue using this cohort (*N*=
`r nrow(step_0)`).

The following steps will begin to recreate the methods used by @mosslemi_2020 et al.


### Step 1: Has valid diabetes-related information

"Participants who did not have a reply to treatment questions (DIQ.050, DIQ.060, 
DIQ.070) – either ‘don’t know’ or ‘refused’ response – and those whose insulin 
treatment period (DIQ.060) appeared longer than their time since diagnosis were 
excluded."

We have created a `yrs_using_insulin` variable to standardize the time value reported by
variables DIQ.060U and DIQ.060Q. `flag_duration` helped to identify participants to remove
by calculating when the years of insulin use exceeded the diabetes disease duration.

```{r}
#| label: step-1
# Has valid diabetes-related information

# "Participants who did not have a reply to treatment questions (DIQ.050, DIQ.060, 
#   DIQ.070) – either ‘don’t know’ or ‘refused’ response – and those whose insulin 
#   treatment period (DIQ.060) appeared longer than their time since diagnosis were 
#   excluded."
step_1 <- step_0 |> 
  mutate(
    # Standardize -- Convert number of months taking insulin to years:
    # diq060u: Months or Years or NA
    # diq060q: Numeric duration
    yrs_using_insulin = case_when(
      diq060u == 'Months' ~ did060q / 12,
      .default = did060q
    ),
    # Flag those where their insulin treatment period exceeds their diab_duration
    flag_duration = case_when(
      yrs_using_insulin > diab_duration ~ 'Remove', 
      is.na(yrs_using_insulin) ~ 'Keep',  # these are ok to keep
      .default = 'Keep'
    )
  )

# Inspect those with the flag indicating they state to use insulin longer than diabetes
#   duration.
tabyl(step_1, flag_duration) |> 
  adorn_pct_formatting() |> 
#  flag_duration    n percent
#           Keep 1053   97.7%
#         Remove   25    2.3%
  gt() |> 
  cols_label(
    flag_duration = 'Reported insulin use longer than duration of diabetes',
    n = 'Count', percent = 'Percent'
  ) |> 
  tab_header(
    title = md('**Step 1a**: Has valid diabetes-related information<br>Those with valid duration of disease versus duration of insulin use information'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()

# Inspect responses for diq050 & diq070:
tabyl(step_1, diq050) |> 
  adorn_pct_formatting() |> 
#     diq050   n percent
#         Yes 285   26.4%
#          No 792   73.5%
#  Don't know   1    0.1%  * remove per manuscript's methods
  gt() |> 
  cols_label(
    diq050 = 'Taking insulin now',
    n = 'Count', percent = 'Percent'
  ) |> 
  tab_header(
    title = md('**Step 1b**: Has valid diabetes-related information<br>Those with valid known medication (insulin) use information'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()

tabyl(step_1, diq070) |> 
  adorn_pct_formatting() |> 
#      diq070   n percent
#         Yes 733   68.0%
#          No 342   31.7%
#  Don't know   3    0.3%  * remove per manuscript's methods
  gt() |> 
  cols_label(
    diq070 = 'Take diabetic pills to lower blood sugar',
    n = 'Count', percent = 'Percent'
  ) |> 
  tab_header(
    title = md('**Step 1c**: Has valid diabetes-related information<br>Those with valid known medication (diabetic pills) use information'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()

# Remove participants not meeting inclusion criteria.
step_1d <- step_1 |> 
  filter(
    # diq050: Taking insulin now
    diq050 %in% c('Yes', 'No'),
    # flag_duration: report using insulin longer than diabetes duration
    flag_duration != 'Remove',
    # diq070: Take diabetic pills to lower blood sugar
    diq070 %in% c('Yes', 'No')
  )

# nrow(step_1)    # 1078
# nrow(step_1d)   # 1049 -- This is good since there were 29 (3+1+25) identified in the 
                # janitor tabyls above! Good to move forward.
```

There were `r sum(step_1$flag_duration == 'Remove')` participants removed for indicating insulin
use longer than their reported duration of diabetes. There was/were also
`r sum(step_1$diq050 == "Don't know")` participant(s) removed for reporting "Don't know" for
DIQ.050 ("Taking insulin now") and `r sum(step_1$diq070 == "Don't know")` participants
removed for reporting "Don't know" for DIQ.070 ("Take diabetic pills to lower blood 
sugar").

<mark>The cohort was thereby reduced from `r nrow(step_1)` to `r nrow(step_1d)` participants who
fully met the inclusion criteria.</mark> This cohort will now be assessed for diabetes
classification.


### Step 2: Currently takes medication for diabetes

"Participants who replied ‘no’ to DIQ.050 and ‘no’ to DIQ.070, meaning that they were 
neither currently taking insulin nor an oral hypoglycemic agent, were assigned as T2D.
The rest were moved forward."

```{r}
#| label: step-2
# Currently takes medication for diabetes

# "Participants who replied ‘no’ to DIQ.050 and ‘no’ to DIQ.070, meaning that they were 
#   neither currently taking insulin nor an oral hypoglycemic agent, were assigned as T2D.
#   The rest were moved forward."
step_2 <- step_1d |> 
  # Remove unnecessary variable(s)
  select(-flag_duration) |> 
  mutate(
    # Create initial diabetes categorization variable. This will be iteratively added to
    # throughout the recreating the manuscript steps.
    step_2_var = case_when(
      (
        # "neither currently taking insulin nor an oral hypoglycemic agent..."
        diq050 == 'No' & 
        diq070 == 'No'
      ) ~ 'T2D',
      .default = 'continue'
    )
  )

st2_dx <- sum(step_2$step_2_var == 'T2D')
st2_dx_pct <- round((st2_dx / nrow(step_2)) * 100, 2)

tabyl(step_2, step_2_var) |> 
  adorn_pct_formatting() |> 
#    step_2_var    n percent
#           T2D  172   16.4%  * identified in this step
#      continue  877   83.6%
  gt() |> 
  cols_label(
    step_2_var = 'Diagnosed in Step 2',
    n = 'Count', percent = 'Percent'
  ) |> 
  tab_header(
    title = md('**Step 2**: Currently takes medication for diabetes'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()
```

<mark>`r st2_dx` (`r st2_dx_pct`%) participants were identified as having Type II 
diabetes during Step 2.</mark> The remaining `r sum(step_2$step_2_var != 'T2D')` will continue
through the classification algorithm.


### Step 3: Currently takes insulin

"Participants who replied ‘no’ to DIQ.050 and therefore were not currently taking 
insulin were assigned as T2D. The rest were moved forward."

```{r}
#| label: step-3
# Currently takes insulin

# "Participants who replied ‘no’ to DIQ.050 and therefore were not currently taking 
#   insulin were assigned as T2D. The rest were moved forward."
step_3 <- step_2 |> 
  mutate(
    step_3_var = case_when(
      step_2_var == 'T2D' ~ 'already classified',
      diq050 == 'No' ~ 'T2D',
      .default = 'continue'
    )
  )

st3_dx <- sum(step_3$step_3_var == 'T2D')
st3_dx_pct <- round((st3_dx / nrow(step_3)) * 100, 2)

tabyl(step_3, step_3_var) |> 
  adorn_pct_formatting() |> 
#          step_3_var   n percent
#                 T2D 620   59.1%  * identified in this step
#  already classified 172   16.4%
#            continue 257   24.5%
  gt() |> 
  cols_label(
    step_3_var = 'Diagnosed in Step 3',
    n = 'Count', percent = 'Percent'
  ) |> 
  tab_header(
    title = md('**Step 3**: Currently takes insulin'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()
```

<mark>`r st3_dx` (`r st3_dx_pct`%) participants were newly identified as having Type II
diabetes during Step 3.</mark>
`r sum(step_3$step_3_var == 'already classified')` participants have been previously
classified in Step 2.
The remaining `r sum(step_3$step_3_var == 'continue')` participants that were not 
previously classified will continue through the classification algorithm.


### Step 4: Currently takes only insulin

"Participants who replied ‘yes’ to DIQ.050 and ‘yes’ to DIQ.070, meaning they were 
taking both insulin and an oral hypoglycemic agent, were assigned as T2D. The rest
were moved forward."

```{r}
#| label: step-4
# Currently takes only insulin

# "Participants who replied ‘yes’ to DIQ.050 and ‘yes’ to DIQ.070, meaning they were 
#   taking both insulin and an oral hypoglycemic agent, were assigned as T2D. The rest
#   were moved forward."
step_4 <- step_3 |> 
  mutate(
    step_4_var = case_when(
      (
        step_2_var == 'T2D' |
        step_3_var == 'T2D'
      ) ~ 'already classified',
      (
        diq050 == 'Yes' &
        diq070 == 'Yes'
      ) ~ 'T2D',
      .default = 'continue'
    )
  )

st4_dx <- sum(step_4$step_4_var == 'T2D')
st4_dx_pct <- round((st4_dx / nrow(step_4)) * 100, 2)

tabyl(step_4, step_4_var) |> 
  adorn_pct_formatting() |> 
#          step_4_var   n percent
#                 T2D 104    9.9%  * identified in this step
#  already classified 792   75.5%
#            continue 153   14.6%
  gt() |> 
  cols_label(
    step_4_var = 'Diagnosed in Step 4',
    n = 'Count', percent = 'Percent'
  ) |> 
  tab_header(
    title = md('**Step 4**: Currently takes **only** insulin'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()
```

<mark>`r st4_dx` (`r st4_dx_pct`%) participants were newly identified as having Type II
diabetes during Step 4.</mark> 
`r sum(step_4$step_4_var == 'already classified')` participants have been previously
classified in Step 2 or Step 3.
The remaining `r sum(step_4$step_4_var == 'continue')` participants that were not 
previously classified will continue through the classification algorithm.


### Step 5: Starting taking insulin within a year after diagnosis

"Participants whose time since diagnosis minus their answer to DIQ.060, insulin 
treatment period, was one year or less, meaning they started taking insulin within 
a year after diagnosis, were assigned as T1D. The rest were labeled as 
‘possible-T2D’."

We used our created variables `diab_duration` (diabetes duration) and `yrs_using_insulin`
(year of insulin use) in place of DIQ.060.

```{r}
#| label: step-5
# Starting taking insulin within a year after diagnosis

# "Participants whose time since diagnosis minus their answer to DIQ.060, insulin 
#   treatment period, was one year or less, meaning they started taking insulin within 
#   a year after diagnosis, were assigned as T1D. The rest were labeled as 
#   ‘possible-T2D’."

# We need to swap the yrs_using_insulin variable for diq060 since yrs_using_insulin is the
#   standardized time variable we created above. The new calculation will be:
#   diab_duration - yrs_using_insulin 
step_5 <- step_4 |> 
  mutate(
    step_5_var = case_when(
      (
        step_2_var == 'T2D' |
        step_3_var == 'T2D' |
        step_4_var == 'T2D' 
      ) ~ 'already classified / T2D',
      diab_duration - yrs_using_insulin <= 1 ~ 'T1D',
      .default = 'possible-T2D'
    )
  )

st5_dx <- sum(step_4$step_5_var == 'T1D')
st5_dx_pct <- round((st5_dx / nrow(step_5)) * 100, 2)

tabyl(step_5, step_5_var) |> 
  adorn_pct_formatting() |> 
#                step_5_var   n percent
#                       T1D  63    6.0%  * identified in this step
#  already classified / T2D 896   85.4%
#              possible-T2D  90    8.6%  * identified in this step via default value
  gt() |> 
  cols_label(
    step_5_var = 'Five-step diagnosis',
    n = 'Count', percent = 'Percent'
  ) |> 
  tab_header(
    title = md('**Step 5**: Results of Mosslemi five-step classification'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()
```

<mark>`r st5_dx` (`r st5_dx_pct`%) participants were identified as having Type I
diabetes during Step 5.</mark> 
`r sum(step_5$step_5_var == 'already classified / T2D')` participants have been previously
classified in Step 2, Step 3, or Step 4.
<mark>The remaining `r sum(step_5$step_5_var == 'possible-T2D')` participants did not meet
@mosslemi_2020 et al. strict criteria for either Type I or Type II diabetes and classified
as "possible Type II diabetes".</mark>



## Results


```{r}
#| label: final cohort
# Creating the final cohort dataset with cleaned variable names
cohort <- step_5 |> 
  mutate(
    diabetes_cat = case_when(
      step_5_var == 'already classified / T2D' ~ 'T2D',
      step_5_var == 'T1D' ~ 'T1D',
      step_5_var == 'possible-T2D' ~ 'possible-T2D',
      .default = 'ERROR!'
    ),

    # "A C-peptide of < 200 pmol/L will be diagnostic" (for T1D) per Galindo email
    # and misc/T1D T2D NHANES.docx file:

    # Convert nmol to pmol:
    cpeptide = lbxcpsi * 1000,
    # Classify based on C-peptide levels:
    cpep_cat = case_when(
      cpeptide < 200 ~ 'T1D',
      .default = 'not T1D'
    ),

    # Add ordered factoring for demonstration
    diabetes_cat = factor(
      diabetes_cat, levels = c('T1D', 'T2D', 'possible-T2D'), 
      labels = c('Type-1 DM', 'Type-2 DM', 'Possible Type-2 DM'),
      ordered = TRUE
    ),
    cpep_cat = factor(
      cpep_cat, levels = c('T1D', 'not T1D'),
      labels = c('Type-1 DM', 'Not Type-1 DM'), 
      ordered = TRUE
    )
  ) |> 
  select(-starts_with('step_'))
```

Results of replicating the five-step classification process from @mosslemi_2020 et al.

```{r}
#| label: 5-step based classification
# From 5-step method:
tabyl(cohort, diabetes_cat) |> 
  adorn_pct_formatting() |> 
#  diabetes_cat   n percent
#           T1D  63    6.0%
#           T2D 896   85.4%
#  possible-T2D  90    8.6%
  gt() |> 
  cols_label(
    diabetes_cat = 'Five-step class',
    n = 'Count', percent = 'Percent'
  ) |> 
  tab_header(
    title = md('**Table Res-1**: Replicating Mosslemi et al five-step\ndiabetes classification methods'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()

load('data/sens_consort.RData')
sens_consort
```

Results of classifying Type I Diabetes based on C-peptide threshold of <= 200pmol/L.

```{r}
#| label: C-peptide based classification
# From C-peptide method:
tabyl(cohort, cpep_cat) |> 
  adorn_pct_formatting() |> 
#  cpep_cat    n percent
#       T1D   17    1.6%
#   not T1D 1032   98.4%
  gt() |> 
  cols_label(
    cpep_cat = 'C-peptide class',
    n = 'Count', percent = 'Percent'
  ) |> 
  tab_header(
    title = md('**Table Res-2**: C-peptide based classification method\nusing threshold of 200pmol/L'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()
```

Cross tabulation of five-step classification (rows) versus C-peptide based classification (columns).

```{r}
#| label: cross-tab 5-step vs cpep
# Cross-tabulation:
tabyl(cohort, diabetes_cat, cpep_cat) |> 
  adorn_totals(where = c('row', 'col')) |> 
#  diabetes_cat not T1D T1D Total
#  possible-T2D      85   5    90
#           T1D      53  10    63
#           T2D     894   2   896
#         Total    1032  17  1049
  gt() |> 
  tab_spanner(
    label = 'Truth: C-peptide based method',
    columns = c('Type-1 DM', 'Not Type-1 DM')
  ) |> 
  cols_label(
    diabetes_cat = 'Five-step Method'
  ) |> 
  tab_header(
    title = md('**Table Res-3**: Cross-tabulation of 5-step method versus C-peptide threshold of <=200pmol/L'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()
```

After collapsing the three-class results using @mosslemi_2020 methods to "Type I" and
"not Type I" ("Type II" and "possible Type II") diabetes, recreating the cross-tabulation
with C-peptide based classification.

```{r}
#| label: collapsed 5-step to 2 levels
# Standardize non-T1D from 5-step method:
collapsed_cohort <- cohort |> 
  mutate(
    five_step = if_else(diabetes_cat == 'Type-1 DM', 'Type-1 DM', 'Not Type-1 DM'),
    five_step = factor(five_step, levels = c('Type-1 DM', 'Not Type-1 DM'), ordered = TRUE),
    flag = if_else(five_step == cpep_cat, 0, 1)
  )
  
two_way <- tabyl(collapsed_cohort, five_step, cpep_cat)
two_way |> 
  gt() |> 
  tab_spanner(
    label = 'Truth: C-peptide based method',
    columns = c('Type-1 DM', 'Not Type-1 DM')
  ) |> 
  cols_label(
    five_step = 'Five-step Method (collapsed)'
  ) |>
  tab_header(
    title = md('<mark>**Table Res-4**: Cross-tabulation of 5-step method\ncollapsing to two levels versus C-peptide threshold of <=200pmol/L</mark>'),
    subtitle = subtitle
  ) |> 
  theme_gt_compact()
#                       TRUTH
#                     C-peptide
#      five_step   Type-1 DM Not Type-1 DM
#      Type-1 DM          10            53
#  Not Type-1 DM           7           979
```

```{r}
#| label: kappa value

# Evaluate the fitness of our method using Cohen's kappa:
kappa <- two_way |> 
  select(-five_step) |> 
  as.matrix() |> 
  psych::cohen.kappa()

kappa_val <- round(kappa$weighted.kappa, 2)
lcl <- round(kappa$confid[1,1], 2)
ucl <- round(kappa$confid[1,3], 2)
```



```{r}
#| label: classification stats
#| include: false

# Column-based: 
TP <- two_way[1,2]  # 10 (predicted T1D, actually T1D)
TN <- two_way[2,3]  # 979 (predicted not T1D, actually not T1D)
FP <- two_way[1,3]  # 53 (predicted T1D, actually not T1D) 
FN <- two_way[2,2]  # 7 (predicted not T1D, actually T1D)

sens <- TP / (TP + FN)  # 10/(10+7) = 10/17
specificity <- TN / (TN + FP)  # 979/(979+53) = 979/1032
accuracy <- (TP + TN) / nrow(cohort)  # (10+979)/1049
misclassified <- FP + FN  # 53 + 7 = 60
misclass_pct <- misclassified / nrow(cohort)
```

The result of the collapsed five-step classifications versus the C-peptide based 
classification reveal:

<mark>False positives: `r FP` participants</mark>  
<mark>False negatives: `r FN` participants</mark>  

Cohen's kappa: `r kappa_val` (95% CI=[`r lcl`, `r ucl`])  

Consistently classified: `r TP + TN`  
Accuracy: `r round(accuracy * 100, 1)`%  
Not consistently classified: `r misclassified` (`r round(misclass_pct * 100, 1)`%)  

Sensitivity: `r round(sens * 100, 1)`%  
Specificity: `r round(specificity * 100, 1)`%


```{r}
#| label: create subset
#| include: false
# make a subset of the 60 off-diagonal people
# only keep the variables used to assess diabetes: 5 vars from flow chart & C-peptide AND
# columns for false pos/neg
cohort_sub <- cohort |> 
  mutate(five_step = if_else(diabetes_cat == 'T1D', 'T1D', 'not T1D')) |> 
  filter(five_step != cpep_cat) |> 
  select(-c(
    did040g, did040q, did060g, did060q, diq060u, lbxcpsi
  ))

# view(cohort_sub)
```


## Tables

### Table 1a: Classification with Five-step method

```{r}
#| label: table-1a
#| message: false
#| warning: false
cohort |> 
  select(-c(
    did060g, did060q, diq060u, lbxcpsi
  )) |> 
  mutate(
    did040 = case_when(
      # There is no value reported for when someone has been told they have diabetes
      # within 1 year of completing the survey. This will impute a value of 0.5
      # for those participants.
      (
        is.na(did040q) & 
        did040g == 'Less than 1 year'
      ) ~ 0.5,
      .default = did040q
    )
  ) |> 
  tbl_summary(
    by = diabetes_cat,
    include = c(
      riagendr, ridageyr, ridreth1, dmdeduc2,
      diq010, did040, diab_duration,
      diq050, yrs_using_insulin, diq070,
      cpeptide, cpep_cat
    ),
    label = c(
      yrs_using_insulin ~ 'Years using insulin',
      cpeptide ~ 'C-peptide (pmol/L)',
      cpep_cat ~ 'Classification of T1D using C-peptide <200pmol/L threshold'
    ),
    missing = 'no'
  ) |> 
  add_auto_labels() |> 
  extras() |> 
  modify_caption(
    caption = '<strong>Table 1a</strong>: Participant characteristics and diabetes classification <br>
      using the 5-step process (Mosslemi et al., 2020)<br>
      <span style="font-size:10px">NHANES (2001-2004)</span><br>
      <i>{subtitle}</i>',
    text_interpret = 'html'
  )
```


### Table 1b: Classification with C-peptide method

```{r}
#| label: table-1b
#| message: false
#| warning: false
cohort |> 
  select(-c(
    did060g, did060q, diq060u, lbxcpsi
  )) |> 
  mutate(
    did040 = case_when(
      # There is no value reported for when someone has been told they have diabetes
      # within 1 year of completing the survey. This will impute a value of 0.5
      # for those participants.
      (
        is.na(did040q) & 
        did040g == 'Less than 1 year'
      ) ~ 0.5,
      .default = did040q
    )
  ) |> 
  tbl_summary(
    by = cpep_cat,
    include = c(
      riagendr, ridageyr, ridreth1, dmdeduc2,
      diq010, did040, diab_duration,
      diq050, yrs_using_insulin, diq070,
      cpeptide, diabetes_cat
    ),
    label = c(
      yrs_using_insulin ~ 'Years using insulin',
      cpeptide ~ 'C-peptide (pmol/L)',
      diabetes_cat ~ 'Classification of diabetes using the 5-step process (Mosslemi et al., 2020)'
    ),
    missing = 'no'
  ) |> 
  add_auto_labels() |> 
  extras() |> 
  modify_caption(
    caption = '<strong>Table 1b</strong>: Participant characteristics and Type-1 diabetes classification <br>
      using diagnostic threshold of C-peptide less than or equal to 200pmol/L<br>
      <span style="font-size:10px">NHANES (2001-2004)</span><br>
      <i>{subtitle}</i>',
    text_interpret = 'html'
  )
```


### Table 2: Five-step method with adiposity measures

```{r}
#| label: adiposity for 2004

# Unfortunately, any adiposity meaures are reduced to 2004 and do not include
# localized fat % measures.
dexa2004 <- nhanes('DXXAG_C') |> mutate(year = 2004, .before = SEQN) |> 
  janitor::clean_names()

# names(dexa2004)

adiposity_cohort <- cohort |> 
  left_join(dexa2004, by = c('year', 'seqn')) |> 
  filter(year == 2004)
```

Unfortunately, Dual Energy X-ray Absorptiometry (DEXA) is available in NHANES beginning
with the 2003-2004 cohort. The following table has filtered the to only include 
participants from that cohort (*n*=`r nrow(adiposity_cohort)`; `r round((nrow(adiposity_cohort) / nrow(cohort)) * 100, 1)`% of the analyzed cohort).

```{r}
#| label: table-2
#| warning: false
adiposity_cohort |> 
  tbl_summary(
    by = diabetes_cat,
    include = c(
      cpep_cat, 
      dxxanfm, dxxanlm, dxxantom, dxxapfat,
      dxxgyfm, dxxgylm, dxxgytom, dxxgpfat,
      dxxagrat
    ),
    label = c(
      cpep_cat ~ 'Classification of T1D using C-peptide <200pmol/L threshold',
      dxxanfm ~ 'Android fat mass (g)',
      dxxanlm ~ 'Android lean mass (g)',
      dxxantom ~ 'Android total mass (g)',
      dxxapfat ~ 'Android percent fat (%)',
      dxxgyfm ~ 'Gynoid fat mass (g)',
      dxxgylm ~ 'Gynoid lean mass (g)',
      dxxgytom ~ 'Gynoid total mass (g)',
      dxxgpfat ~ 'Gynoid percent fat (%)',
      dxxagrat ~ 'Android to Gynoid ratio'
    ),
    missing = 'no'
  ) |> 
  add_auto_labels() |> 
  extras(overall = FALSE) |> 
  modify_caption(
    caption = '<strong>Table 2</strong>: Dual Energy X-ray Absorptiometry (DEXA)<br>
      results by five-step diabetes classification<br>
      <i>DEXA data limited to 2003-2004 cohort only</i><br>
      <span style="font-size:10px">NHANES (2003-2004)</span><br>
      <i>{subtitle}</i>',
    text_interpret = 'html'
  )
```

