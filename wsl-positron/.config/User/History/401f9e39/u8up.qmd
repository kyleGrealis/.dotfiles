---
title: ""
date: last-modified
---

---

{{< brand logo large >}}


```{r}
#| label: set up
#| echo: false
source("R/_libraries.R")

source('R/custom_functions.R')
source('R/custom_table_functions.R')

if (!fs::dir_exists('data')) fs::dir_create('data')
```

```{r}
#| label: custom function
#| echo: false

# This URL will direct you to the list of interviewer manuals & questionnaire instruments
# https://wwwn.cdc.gov/nchs/nhanes/continuousnhanes/questionnaires.aspx?Cycle=2021-2023

# NOTE: the PDF links on the page provide a questionnaire, but not all variables may be 
# listed compared to when using `nhanes("DIQ_L") |> names()`.
# The custom `get_url()` function is needed to get the link to the full set of variables
# from the codebook!

#----------------------------------------------------------------------------------------
#' Custom function to retrieve the codebook URL
#' @param table Character. The table where variable information is needed.
#' @returns Full URL to CDC data documentation, codebook, & frequencies.
get_url <- function(table) {
  paste0(
    "https://wwwn.cdc.gov",
    nhanesManifest() |> 
      filter(Table == table) |> 
      pull(DocURL)
  ) |> 
  message()
}
```


```{r}
#| label: explore diabetes data
#| eval: false

# Get the URL to the codebook
get_url("DIQ_L")
# https://wwwn.cdc.gov/Nchs/Data/Nhanes/Public/2021/DataFiles/DIQ_L.htm

# DESCRIPTION: The diabetes questionnaire (DIQ_L) data file provides personal interview 
# data on diabetes, prediabetes, and use of insulin and/or oral hypoglycemic medications.

# diabetes <- nhanes("DIQ_L") |> 
#   rename(
#     record_id = SEQN,
#     diabetes_dx = DIQ010,
#     diabetes_age = DID040,
#     prediabetes_dx = DIQ160,
#     blood_test_3yr = DIQ180,
#     taking_insulin = DIQ050,
#     insulin_duration = DID060,
#     insulin_unit = DIQ060U,
#     diabetic_pills = DIQ070
#   )

```

```{r}
#| label: demographics
# Find the tables for demographic data
nhanesManifest() |> 
  filter(str_detect(Table, 'DEMO')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))

# https://wwwn.cdc.gov/Nchs/Data/Nhanes/Public/1999/DataFiles/DEMO.htm

#     Table                                             DocURL     Years
# 1  DEMO_L /Nchs/Data/Nhanes/Public/2021/DataFiles/DEMO_L.htm 2021-2023
# 3  DEMO_J /Nchs/Data/Nhanes/Public/2017/DataFiles/DEMO_J.htm 2017-2018
# 4  DEMO_I /Nchs/Data/Nhanes/Public/2015/DataFiles/DEMO_I.htm 2015-2016
# 5  DEMO_H /Nchs/Data/Nhanes/Public/2013/DataFiles/DEMO_H.htm 2013-2014
# 6  DEMO_G /Nchs/Data/Nhanes/Public/2011/DataFiles/DEMO_G.htm 2011-2012
# 7  DEMO_F /Nchs/Data/Nhanes/Public/2009/DataFiles/DEMO_F.htm 2009-2010
# 8  DEMO_E /Nchs/Data/Nhanes/Public/2007/DataFiles/DEMO_E.htm 2007-2008
# 9  DEMO_D /Nchs/Data/Nhanes/Public/2005/DataFiles/DEMO_D.htm 2005-2006
# 10 DEMO_C /Nchs/Data/Nhanes/Public/2003/DataFiles/DEMO_C.htm 2003-2004
# 11 DEMO_B /Nchs/Data/Nhanes/Public/2001/DataFiles/DEMO_B.htm 2001-2002
# 12   DEMO   /Nchs/Data/Nhanes/Public/1999/DataFiles/DEMO.htm 1999-2000
demo_vars <- c(
  "SEQN", "RIAGENDR", "RIDAGEYR",
  "WTMEC2YR", "WTINT2YR", "SDMVPSU", "SDMVSTRA",
  "RIDRETH1", "RIDRETH2", "RIDRETH3", "DMDEDUC2", "INDHHIN2"
)

demo_specs <- tibble(
  code = c('DEMO', paste0('DEMO_', c(LETTERS[2:10], LETTERS[12]))),
  year = c(seq(1999, 2017, by = 2), 2021)
)

demographics <- demo_specs |> 
  pmap_dfr(function(code, year) {
    print(year)
    nhanes(code) |> 
      select(any_of(demo_vars)) |> 
      mutate(year = year, .before = SEQN)
  }) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )

pull_nhanes <- function(nhanes_table, selected_variables) {
  # Starting with B through L, skipping K
  table_suffixes <- c(LETTERS[2:10], LETTERS[12])
  start_dfr <- tibble(
    # Append the suffix to tables. First table has no letter suffix
    code = c(nhanes_table, paste0(nhanes_table, '_', table_suffixes)),
    # The data for 2019-2020 was not collected the same way. See full docs.
    # This creates years: 1999-2017 & 2021
    year = c(seq(1999, 2017, by = 2), 2021)
  )

  # Use pmap_dfr to map over a data frame and add rows to the start_dfr:
  mapped_dfr <- start_dfr |> 
    pmap_dfr(function(code, year) {
      print(year)
      nhanes(code) |> 
        select(any_of(selected_variables)) |> 
        mutate(year = year, .before = SEQN)
    }) |> 
    janitor::clean_names() |> 
    mutate(
      year = as.integer(year),
      seqn = as.integer(seqn)
    )

  return(mapped_dfr)
}

demographics <- pull_nhanes('DEMO', demo_vars)

names(demographics)
# year: First year of survey
# seqn: Participant ID
# riagendr: Gender
# ridageyr: Age in years at screening
# wtmec2yr: Full sample 2-year MEC exam weight
# wtint2yr: Full sample 2-year interview weight
# sdmvpsu: Masked variance pseudo-PSU
# smvstra: Masked variance pseudo-stratum
# ridreth1: Race/Hispanic origin
# ridreth2: Race/Hispanic origin
# ridreth3: Race/Hispanic origin w/ NH Asian
# dmdeduc2: Education level - Adults 20+
# indhhin2: Annual household income
```

```{r}
#| label: diabetes data
# Find the tables for diabetes data
nhanesManifest() |> 
  filter(str_detect(Table, 'DIQ')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))
#    Table                                            DocURL     Years
# 1  DIQ_L /Nchs/Data/Nhanes/Public/2021/DataFiles/DIQ_L.htm 2021-2023
# 2  P_DIQ /Nchs/Data/Nhanes/Public/2017/DataFiles/P_DIQ.htm 2017-2020
# 3  DIQ_J /Nchs/Data/Nhanes/Public/2017/DataFiles/DIQ_J.htm 2017-2018
# 4  DIQ_I /Nchs/Data/Nhanes/Public/2015/DataFiles/DIQ_I.htm 2015-2016
# 5  DIQ_H /Nchs/Data/Nhanes/Public/2013/DataFiles/DIQ_H.htm 2013-2014
# 6  DIQ_G /Nchs/Data/Nhanes/Public/2011/DataFiles/DIQ_G.htm 2011-2012
# 7  DIQ_F /Nchs/Data/Nhanes/Public/2009/DataFiles/DIQ_F.htm 2009-2010
# 8  DIQ_E /Nchs/Data/Nhanes/Public/2007/DataFiles/DIQ_E.htm 2007-2008
# 9  DIQ_D /Nchs/Data/Nhanes/Public/2005/DataFiles/DIQ_D.htm 2005-2006
# 10 DIQ_C /Nchs/Data/Nhanes/Public/2003/DataFiles/DIQ_C.htm 2003-2004
# 11 DIQ_B /Nchs/Data/Nhanes/Public/2001/DataFiles/DIQ_B.htm 2001-2002
# 12   DIQ   /Nchs/Data/Nhanes/Public/1999/DataFiles/DIQ.htm 1999-2000

diabetes2021 <- nhanes('DIQ_L') |> mutate(year = 2021, .before = SEQN)
diabetes2017 <- nhanes('DIQ_J') |> mutate(year = 2017, .before = SEQN)
diabetes2015 <- nhanes('DIQ_I') |> mutate(year = 2015, .before = SEQN)
diabetes2013 <- nhanes('DIQ_H') |> mutate(year = 2013, .before = SEQN)
diabetes2011 <- nhanes('DIQ_G') |> mutate(year = 2011, .before = SEQN)

# DIQ040G was 1999-2004; converted to DID040 in 2005

diabetes <- bind_rows(
  diabetes2021,
  diabetes2017,
  diabetes2015,
  diabetes2013,
  diabetes2011
) |> 
  select(year, SEQN, DIQ010, DID040, DIQ160, DIQ050, DID060, DIQ070) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )
names(diabetes)
# year: First year of survey
# seqn: Participant ID
# diq010: Doctor told you have diabetes
# did040: Age when first told you had diabetes
# diq160: Ever told you have prediabetes
# diq050: Taking insulin now
# did060: How long taking insulin
# diq070: Take diabetic pills to lower blood sugar
```

```{r}
#| label: test join
# left_join(demographics, diabetes, by = c('year', 'seqn')) |> nrow()
```

```{r}
#| label: body composition measures
# Find the tables for body composition measures data
nhanesManifest() |> 
  filter(str_detect(Table, 'BMX')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))
#    Table                                            DocURL     Years
# 1  BMX_L /Nchs/Data/Nhanes/Public/2021/DataFiles/BMX_L.htm 2021-2023
# 2  P_BMX /Nchs/Data/Nhanes/Public/2017/DataFiles/P_BMX.htm 2017-2020
# 3  BMX_J /Nchs/Data/Nhanes/Public/2017/DataFiles/BMX_J.htm 2017-2018
# 4  BMX_I /Nchs/Data/Nhanes/Public/2015/DataFiles/BMX_I.htm 2015-2016
# 5  BMX_H /Nchs/Data/Nhanes/Public/2013/DataFiles/BMX_H.htm 2013-2014
# 6  BMX_G /Nchs/Data/Nhanes/Public/2011/DataFiles/BMX_G.htm 2011-2012
# 7  BMX_F /Nchs/Data/Nhanes/Public/2009/DataFiles/BMX_F.htm 2009-2010
# 8  BMX_E /Nchs/Data/Nhanes/Public/2007/DataFiles/BMX_E.htm 2007-2008
# 9  BMX_D /Nchs/Data/Nhanes/Public/2005/DataFiles/BMX_D.htm 2005-2006
# 10 BMX_C /Nchs/Data/Nhanes/Public/2003/DataFiles/BMX_C.htm 2003-2004
# 11 BMX_B /Nchs/Data/Nhanes/Public/2001/DataFiles/BMX_B.htm 2001-2002
# 12   BMX   /Nchs/Data/Nhanes/Public/1999/DataFiles/BMX.htm 1999-2000

body2021 <- nhanes('BMX_L') |> 
  select(SEQN, BMXWT, BMXHT, BMXBMI, BMXWAIST) |> 
  mutate(year = 2021, .before = SEQN)
body2017 <- nhanes('BMX_J') |> 
  select(SEQN, BMXWT, BMXHT, BMXBMI, BMXWAIST) |> 
  mutate(year = 2017, .before = SEQN)
body2015 <- nhanes('BMX_I') |> 
  select(SEQN, BMXWT, BMXHT, BMXBMI, BMXWAIST) |> 
  mutate(year = 2015, .before = SEQN)
body2013 <- nhanes('BMX_H') |> 
  select(SEQN, BMXWT, BMXHT, BMXBMI, BMXWAIST) |> 
  mutate(year = 2013, .before = SEQN)
body2011 <- nhanes('BMX_G') |> 
  select(SEQN, BMXWT, BMXHT, BMXBMI, BMXWAIST) |> 
  mutate(year = 2011, .before = SEQN)

body <- bind_rows(
  body2021,
  body2017,
  body2015,
  body2013,
  body2011
) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )
names(body)
# year: First year of survey
# seqn: Participant ID
# bmxwt: Weight (kg)
# bmxht: Standing Height (cm)
# bmxbmi: Body Mass Index (kg/m^2)
# bmxwaist: Waist Circumference (cm)
```

```{r}
#| label: body fat % 
# Find tables for body fat % from body scan
nhanesManifest() |> 
  filter(str_detect(Table, 'DXX_')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))
#     Table                                              DocURL     Years
# 1   DXX_J   /Nchs/Data/Nhanes/Public/2017/DataFiles/DXX_J.htm 2017-2018
# 2   DXX_I   /Nchs/Data/Nhanes/Public/2015/DataFiles/DXX_I.htm 2015-2016
# 3   DXX_H   /Nchs/Data/Nhanes/Public/2013/DataFiles/DXX_H.htm 2013-2014
# 4   DXX_G   /Nchs/Data/Nhanes/Public/2011/DataFiles/DXX_G.htm 2011-2012
# 5 DXX_2_B /Nchs/Data/Nhanes/Public/2001/DataFiles/DXX_2_B.htm 2001-2002

# bodyscan2021 does not exist
bodyscan2017 <- nhanes('DXX_J') |> 
  select(SEQN, DXDLAPF, DXDLLPF, DXDRAPF, DXDRLPF, DXDTRPF, DXDSTPF, DXDTOPF, DXDTOFAT) |> 
  mutate(year = 2017, .before = SEQN)
bodyscan2015 <- nhanes('DXX_I') |> 
  select(SEQN, DXDLAPF, DXDLLPF, DXDRAPF, DXDRLPF, DXDTRPF, DXDSTPF, DXDTOPF, DXDTOFAT) |> 
  mutate(year = 2015, .before = SEQN)
bodyscan2013 <- nhanes('DXX_H') |> 
  select(SEQN, DXDLAPF, DXDLLPF, DXDRAPF, DXDRLPF, DXDTRPF, DXDSTPF, DXDTOPF, DXDTOFAT) |> 
  mutate(year = 2013, .before = SEQN)
bodyscan2011 <- nhanes('DXX_G') |> 
  select(SEQN, DXDLAPF, DXDLLPF, DXDRAPF, DXDRLPF, DXDTRPF, DXDSTPF, DXDTOPF, DXDTOFAT) |> 
  mutate(year = 2011, .before = SEQN)

bodyscan <- bind_rows(
  # bodyscan2021,
  bodyscan2017,
  bodyscan2015,
  bodyscan2013,
  bodyscan2011
) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )
names(bodyscan)
# year: First year of survey
# seqn: Participant ID
# dxdlapf: Left Arm Percent Fat
# dxdllpf: Left Leg Percent Fat
# dxdrapf: Right Arm Percent Fat
# dxdrlpf: Right Leg Percent Fat
# dxdtrpf: Trunk Percent Fat
# dxdstpf: Subtotal Percent Fat
# dxdtopf: Total Percent Fat
# dxdtofat: Total Fat (g)
```

```{r}
#| label: more dexa data
# Find tables for more dexa scan 
nhanesManifest() |> 
  filter(str_detect(Table, 'DXXAG_')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))
#     Table                                              DocURL     Years
# 1 DXXAG_J /Nchs/Data/Nhanes/Public/2017/DataFiles/DXXAG_J.htm 2017-2018
# 2 DXXAG_I /Nchs/Data/Nhanes/Public/2015/DataFiles/DXXAG_I.htm 2015-2016
# 3 DXXAG_H /Nchs/Data/Nhanes/Public/2013/DataFiles/DXXAG_H.htm 2013-2014
# 4 DXXAG_G /Nchs/Data/Nhanes/Public/2011/DataFiles/DXXAG_G.htm 2011-2012
# 5 DXXAG_D /Nchs/Data/Nhanes/Public/2005/DataFiles/DXXAG_D.htm 2005-2006
# 6 DXXAG_C /Nchs/Data/Nhanes/Public/2003/DataFiles/DXXAG_C.htm 2003-2004

# dexa2021 <- nhanes('DXXAG_L') |> mutate(year = 2021, .before = SEQN)
dexa2017 <- nhanes('DXXAG_J') |> mutate(year = 2017, .before = SEQN)
dexa2015 <- nhanes('DXXAG_I') |> mutate(year = 2015, .before = SEQN)
dexa2013 <- nhanes('DXXAG_H') |> mutate(year = 2013, .before = SEQN)
dexa2011 <- nhanes('DXXAG_G') |> mutate(year = 2011, .before = SEQN)

dexa <- bind_rows(
  # dexa2021,
  dexa2017,
  dexa2015,
  dexa2013,
  dexa2011
) |> 
  janitor::clean_names() |> 
  select(year, seqn, dxxanfm, dxxanlm, dxxgyfm, dxxgylm, dxxagrat, dxxsatm, dxxtatm, dxxvfatm)

names(dexa)

# year: First year of survey
# seqn: Participant ID
# dxxanfm: Android fat mass
# dxxanlm: Android lean mass
# dxxgyfm: Gynoid fat mass
# dxxgylm: Gynoid lean mass
# dxxagrat: Android to Gynoid ration
# dxxsatm: Subcutaneous fat mass
# dxxtatm:  Total abdominal fat mass
# dxxvfatm: Visceral adipose tissue mass
```


```{r}
#| label: glycohemoglobin data
# Find tables for glycohemoglobin for diabetes identification
nhanesManifest() |> 
  filter(str_detect(Table, 'GHB_')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))
#   Table                                            DocURL     Years
# 1 GHB_L /Nchs/Data/Nhanes/Public/2021/DataFiles/GHB_L.htm 2021-2023
# 2 GHB_J /Nchs/Data/Nhanes/Public/2017/DataFiles/GHB_J.htm 2017-2018
# 3 GHB_I /Nchs/Data/Nhanes/Public/2015/DataFiles/GHB_I.htm 2015-2016
# 4 GHB_H /Nchs/Data/Nhanes/Public/2013/DataFiles/GHB_H.htm 2013-2014
# 5 GHB_G /Nchs/Data/Nhanes/Public/2011/DataFiles/GHB_G.htm 2011-2012
# 6 GHB_F /Nchs/Data/Nhanes/Public/2009/DataFiles/GHB_F.htm 2009-2010
# 7 GHB_E /Nchs/Data/Nhanes/Public/2007/DataFiles/GHB_E.htm 2007-2008
# 8 GHB_D /Nchs/Data/Nhanes/Public/2005/DataFiles/GHB_D.htm 2005-2006

glyco2021 <- nhanes('GHB_L') |> mutate(year = 2021, .before = SEQN)
glyco2017 <- nhanes('GHB_J') |> mutate(year = 2017, .before = SEQN)
glyco2015 <- nhanes('GHB_I') |> mutate(year = 2015, .before = SEQN)
glyco2013 <- nhanes('GHB_H') |> mutate(year = 2013, .before = SEQN)
glyco2011 <- nhanes('GHB_G') |> mutate(year = 2011, .before = SEQN)

glyco <- bind_rows(
  glyco2021,
  glyco2017,
  glyco2015,
  glyco2013,
  glyco2011
) |> 
  select(-WTPH2YR) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )
names(glyco)
# year: First year of survey
# seqn: Participant ID
# lbxgh: Glycohemoglobin % / HbA1c %
```

```{r}
#| label: triglyceride data
# Find tables for triglyceride data
nhanesManifest() |> 
  filter(str_detect(Table, 'TRIGLY_')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))
#      Table                                               DocURL     Years
# 1 TRIGLY_J /Nchs/Data/Nhanes/Public/2017/DataFiles/TRIGLY_J.htm 2017-2018
# 2 TRIGLY_I /Nchs/Data/Nhanes/Public/2015/DataFiles/TRIGLY_I.htm 2015-2016
# 3 TRIGLY_H /Nchs/Data/Nhanes/Public/2013/DataFiles/TRIGLY_H.htm 2013-2014
# 4 TRIGLY_G /Nchs/Data/Nhanes/Public/2011/DataFiles/TRIGLY_G.htm 2011-2012
# 5 TRIGLY_F /Nchs/Data/Nhanes/Public/2009/DataFiles/TRIGLY_F.htm 2009-2010
# 6 TRIGLY_E /Nchs/Data/Nhanes/Public/2007/DataFiles/TRIGLY_E.htm 2007-2008
# 7 TRIGLY_D /Nchs/Data/Nhanes/Public/2005/DataFiles/TRIGLY_D.htm 2005-2006

# trigly2021 <- nhanes('TRIGLY_L') |> mutate(year = 2021, .before = SEQN)
trigly2017 <- nhanes('TRIGLY_J') |> mutate(year = 2017, .before = SEQN)
trigly2015 <- nhanes('TRIGLY_I') |> mutate(year = 2015, .before = SEQN)
trigly2013 <- nhanes('TRIGLY_H') |> mutate(year = 2013, .before = SEQN)
trigly2011 <- nhanes('TRIGLY_G') |> mutate(year = 2011, .before = SEQN)

trigly <- bind_rows(
  trigly2017,
  trigly2013,
  trigly2015,
  trigly2011
) |> 
  select(year, SEQN, LBXTR, LBDLDL) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )
names(trigly)
# year: First year of survey
# seqn: Participant ID
# lbxtr: Triglyceride (mg/dL)
# lbdldl: LDL-Cholesterol, Friedewald (mg/dL)
```

```{r}
#| label: cholesterol data
# Find tables for choloesterol data
nhanesManifest() |> 
  filter(str_detect(Table, 'TCHOL_')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))
#     Table                                              DocURL     Years
# 1 TCHOL_L /Nchs/Data/Nhanes/Public/2021/DataFiles/TCHOL_L.htm 2021-2023
# 2 TCHOL_J /Nchs/Data/Nhanes/Public/2017/DataFiles/TCHOL_J.htm 2017-2018
# 3 TCHOL_I /Nchs/Data/Nhanes/Public/2015/DataFiles/TCHOL_I.htm 2015-2016
# 4 TCHOL_H /Nchs/Data/Nhanes/Public/2013/DataFiles/TCHOL_H.htm 2013-2014
# 5 TCHOL_G /Nchs/Data/Nhanes/Public/2011/DataFiles/TCHOL_G.htm 2011-2012
# 6 TCHOL_F /Nchs/Data/Nhanes/Public/2009/DataFiles/TCHOL_F.htm 2009-2010
# 7 TCHOL_E /Nchs/Data/Nhanes/Public/2007/DataFiles/TCHOL_E.htm 2007-2008
# 8 TCHOL_D /Nchs/Data/Nhanes/Public/2005/DataFiles/TCHOL_D.htm 2005-2006

chole2021 <- nhanes('TCHOL_L') |> mutate(year = 2021, .before = SEQN)
chole2017 <- nhanes('TCHOL_J') |> mutate(year = 2017, .before = SEQN)
chole2015 <- nhanes('TCHOL_I') |> mutate(year = 2015, .before = SEQN)
chole2013 <- nhanes('TCHOL_H') |> mutate(year = 2013, .before = SEQN)
chole2011 <- nhanes('TCHOL_G') |> mutate(year = 2011, .before = SEQN)

chole <- bind_rows(
  chole2021,
  chole2017,
  chole2015,
  chole2013,
  chole2011
) |> 
  select(-WTPH2YR, -LBDTCSI) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )
names(chole)
# year: First year of survey
# seqn: Participant ID
# lbxtc: Total Cholesterol (mg/dL)
```

```{r}
#| label: HDL data
# Find tables for HDL data
nhanesManifest() |> 
  filter(str_detect(Table, 'HDL_')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))
#   Table                                            DocURL     Years
# 1 HDL_L /Nchs/Data/Nhanes/Public/2021/DataFiles/HDL_L.htm 2021-2023
# 2 HDL_J /Nchs/Data/Nhanes/Public/2017/DataFiles/HDL_J.htm 2017-2018
# 3 HDL_I /Nchs/Data/Nhanes/Public/2015/DataFiles/HDL_I.htm 2015-2016
# 4 HDL_H /Nchs/Data/Nhanes/Public/2013/DataFiles/HDL_H.htm 2013-2014
# 5 HDL_G /Nchs/Data/Nhanes/Public/2011/DataFiles/HDL_G.htm 2011-2012
# 6 HDL_F /Nchs/Data/Nhanes/Public/2009/DataFiles/HDL_F.htm 2009-2010
# 7 HDL_E /Nchs/Data/Nhanes/Public/2007/DataFiles/HDL_E.htm 2007-2008
# 8 HDL_D /Nchs/Data/Nhanes/Public/2005/DataFiles/HDL_D.htm 2005-2006

hdl2021 <- nhanes('HDL_L') |> mutate(year = 2021, .before = SEQN)
hdl2017 <- nhanes('HDL_J') |> mutate(year = 2017, .before = SEQN)
hdl2015 <- nhanes('HDL_I') |> mutate(year = 2015, .before = SEQN)
hdl2013 <- nhanes('HDL_H') |> mutate(year = 2013, .before = SEQN)
hdl2011 <- nhanes('HDL_G') |> mutate(year = 2011, .before = SEQN)

hdl <- bind_rows(
  hdl2021,
  hdl2017,
  hdl2015,
  hdl2013,
  hdl2011
) |> 
  select(year, SEQN, LBDHDD) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )
names(hdl)
# year: First year of survey
# seqn: Participant ID
# lbdhdd: Direct HDL-Cholesterol (mg/dL)
```

```{r}
#| label: glucose data
# Find tables for glucose data
nhanesManifest() |> 
  filter(str_detect(Table, 'GLU_')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))
#   Table                                            DocURL     Years
# 1 GLU_L /Nchs/Data/Nhanes/Public/2021/DataFiles/GLU_L.htm 2021-2023
# 2 GLU_J /Nchs/Data/Nhanes/Public/2017/DataFiles/GLU_J.htm 2017-2018
# 3 GLU_I /Nchs/Data/Nhanes/Public/2015/DataFiles/GLU_I.htm 2015-2016
# 4 GLU_H /Nchs/Data/Nhanes/Public/2013/DataFiles/GLU_H.htm 2013-2014
# 5 GLU_G /Nchs/Data/Nhanes/Public/2011/DataFiles/GLU_G.htm 2011-2012
# 6 GLU_F /Nchs/Data/Nhanes/Public/2009/DataFiles/GLU_F.htm 2009-2010
# 7 GLU_E /Nchs/Data/Nhanes/Public/2007/DataFiles/GLU_E.htm 2007-2008
# 8 GLU_D /Nchs/Data/Nhanes/Public/2005/DataFiles/GLU_D.htm 2005-2006

glucose2021 <- nhanes('GLU_L') |> mutate(year = 2021, .before = SEQN)
glucose2017 <- nhanes('GLU_J') |> mutate(year = 2017, .before = SEQN)
glucose2015 <- nhanes('GLU_I') |> mutate(year = 2015, .before = SEQN)
glucose2013 <- nhanes('GLU_H') |> mutate(year = 2013, .before = SEQN)
glucose2011 <- nhanes('GLU_G') |> mutate(year = 2011, .before = SEQN)

glucose <- bind_rows(
  glucose2021,
  glucose2017,
  glucose2015,
  glucose2013,
  glucose2011
) |> 
  select(year, SEQN, LBXGLU) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )
names(glucose)
# year: First year of survey
# seqn: Participant ID
# lbxglu: Fasting Glucose (mg/dL)
```

```{r}
#| label: blood pressure data
# Find tables for blood pressure data
nhanesManifest() |> 
  filter(str_detect(Table, 'BPX_')) |> 
  select(-DataURL, -`Date.Published`) |> 
  arrange(desc(Years))
#   Table                                            DocURL     Years
# 1 BPX_J /Nchs/Data/Nhanes/Public/2017/DataFiles/BPX_J.htm 2017-2018
# 2 BPX_I /Nchs/Data/Nhanes/Public/2015/DataFiles/BPX_I.htm 2015-2016
# 3 BPX_H /Nchs/Data/Nhanes/Public/2013/DataFiles/BPX_H.htm 2013-2014
# 4 BPX_G /Nchs/Data/Nhanes/Public/2011/DataFiles/BPX_G.htm 2011-2012
# 5 BPX_F /Nchs/Data/Nhanes/Public/2009/DataFiles/BPX_F.htm 2009-2010
# 6 BPX_E /Nchs/Data/Nhanes/Public/2007/DataFiles/BPX_E.htm 2007-2008
# 7 BPX_D /Nchs/Data/Nhanes/Public/2005/DataFiles/BPX_D.htm 2005-2006
# 8 BPX_C /Nchs/Data/Nhanes/Public/2003/DataFiles/BPX_C.htm 2003-2004
# 9 BPX_B /Nchs/Data/Nhanes/Public/2001/DataFiles/BPX_B.htm 2001-2002

# bp2021 <- nhanes('BPX_L') |> mutate(year = 2021, .before = SEQN)
bp2017 <- nhanes('BPX_J') |> mutate(year = 2017, .before = SEQN)
bp2015 <- nhanes('BPX_I') |> mutate(year = 2015, .before = SEQN)
bp2013 <- nhanes('BPX_H') |> mutate(year = 2013, .before = SEQN)
bp2011 <- nhanes('BPX_G') |> mutate(year = 2011, .before = SEQN)

bp <- bind_rows(
  # bp2021,
  bp2017,
  bp2015,
  bp2013,
  bp2011
) |> 
  select(year, SEQN, contains('BPXDI'), contains('BPXSY')) |> 
  janitor::clean_names() |> 
  mutate(
    year = as.integer(year),
    seqn = as.integer(seqn)
  )
names(bp)
# year: First year of survey
# seqn: Participant ID
# bpxsy*: systolic BP readings (4 total readings)
# bxpdi*: diastolyic BP readings (4 total readings)
```

```{r}
#| label: joining data
# Merge the above datasets by SEQN & year
the_data <- demographics |> 
  left_join(diabetes, by = c('seqn', 'year')) |> 
  left_join(body, by = c('seqn', 'year')) |> 
  left_join(bodyscan, by = c('seqn', 'year')) |> 
  left_join(dexa, by = c('seqn', 'year')) |> 
  left_join(glyco, by = c('seqn', 'year')) |> 
  left_join(trigly, by = c('seqn', 'year')) |> 
  left_join(chole, by = c('seqn', 'year')) |> 
  left_join(hdl, by = c('seqn', 'year')) |> 
  left_join(glucose, by = c('seqn', 'year')) |> 
  left_join(bp, by = c('seqn', 'year')) |> 
  # Create new variables
  mutate(
    waist_height_ratio = bmxwaist / bmxht,  # waist (cm) / standing height (cm)
    mean_dbp = rowMeans(pick(contains('bpxdi')), na.rm = TRUE),
    mean_sbp = rowMeans(pick(contains('bpxsy')), na.rm = TRUE),

    # Create a diagnostic age variable for diabetes. Age at survey - diagnosis age:
    diab_duration = case_when(
      did040 == 999 ~ 0,             # use their age at survey
      did040 == 666 ~ 0.5,           # reported "less than one year" for dx;
      .default = ridageyr - did040   # age at survey - diagnosis age
    )
  ) |> 
  select(-contains('BPXDI'), -contains('BPXSY'))

names(the_data)
```

```{r}
#| label: survey design setup
# Create the main survey design object for all future analyses
nhanes_design <- svydesign(
  ids = ~sdmvpsu,           # Primary sampling units
  strata = ~sdmvstra,       # Strata  
  weights = ~wtmec2yr,      # MEC exam weights (use this for physical measurements)
  nest = TRUE,
  data = the_data
)

# Save the original data & the survey design
save(the_data, nhanes_design, file = 'data/the_data.rda')
```

```{r}
#| label: table setup
#| include: true

# This contains labels for the entire dataset. Remove as needed for individual tables.

the_data |> 
  mutate(
    dxdtofat = dxdtofat/1000,
    diabetes_cat = factor(case_when(
      (is.na(diq010) & is.na(diq160)) ~ NA_character_,
      diq010 == 'Yes' ~ 'DM',
      diq160 == 'Yes' ~ 'PreDM',
      (diq010 == 'No' & diq160 == 'No') ~ 'No DM',
      (diq010 == 'No' & diq160 == "Don't know") ~ 'No DM',
      (diq010 == 'No' & is.na(diq160)) ~ 'No DM',
      diq010 == 'Borderline' ~ 'No DM',
      .default = 'No DM'
    ), levels = c('No DM', 'PreDM', 'DM'), ordered = TRUE)
  ) |> 
  select(
    riagendr, ridageyr, diabetes_cat,
    bmxbmi, dxdtopf, dxdtofat, 
    bmxwaist, waist_height_ratio, 
    lbxgh, lbxglu, mean_sbp, mean_dbp,
    lbxtc, lbdhdd, lbdldl, lbxtr
  ) |> 
  tbl_summary(
    by = diabetes_cat,
    label = c(
      riagendr ~ 'Gender',
      ridageyr ~ 'Age in years at screening',
      bmxbmi ~ 'Body Mass Index (kg/m^2)',
      bmxwaist ~ 'Waist Circumference (cm)',
      waist_height_ratio ~ 'Waist-to-Height Ratio (calculated)',
      dxdtopf ~ 'Body Fat Percentage (%)',
      dxdtofat ~ 'Total Fat (kg)',
      lbxgh ~ 'HbA1c %',  # Glycohemoglobin %
      lbxtr ~ 'Triglycerides (mg/dL)',
      lbdldl ~ 'LDL Cholesterol (mg/dL)',
      lbxtc ~ 'Total Cholesterol (mg/dL)',
      lbdhdd ~ 'HDL Cholesterol (mg/dL)',
      lbxglu ~ 'Fasting Glucose (mg/dL)',
      mean_sbp ~ 'Systolic BP (mean)',
      mean_dbp ~ 'Diastolyic BP (mean)'
    ),
    missing = 'no'
  ) |> 
  extras(pval = FALSE) |> 
  modify_caption(
    glue('<strong>Table 1</strong>: 
      <i>NHANES survey data (2011-2023)
      <br>by diabetes diagnosis</i>
      <br><span style="font-size:12px">{subtitle}</span>'),
    text_interpret = 'html'
  )
```

